<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8">
    <title></title>
    <style>
      .chat_text__message__wrapper {
        display: flex;
        flex-direction: row;
        align-items: flex-start;
        border-top: #bababa 1px solid;
      }
      .chat_text__message__user_name {
        font-weight: bold;
        padding: 5px;
      }
      .chat_text__message__text {
        padding: 5px;
        font-family: sans-serif;
      }
      .user_name__container {
        padding: 15px;
      }
      .message_input_container {
        position: absolute;
        left: 15px;
        bottom: 15px;
      }
      .message_input_container input {
        width: 400px;
        border: 1px solid black;
        padding: 5px;
      }
    </style>
  </head>
  <body>

    <h1>Chat application</h1>

    <div class="application_container">

      <div class="user_name__container">
        User name:
        <input type="text" data-name="user_name" value="Mark">
      </div>

      <div class="chat_text__container" data-name="chat_container">
      </div>

      <div class="message_input_container">
        <input type="text" data-name="message_input">
        <button data-name="send_button">Send</button>
      </div>
    </div>

    <script type="text/javascript">
      let userNameInput = document.querySelector('[data-name="user_name"]');
      let chatContainer = document.querySelector('[data-name="chat_container"]');
      let messageInput = document.querySelector('[data-name="message_input"]');
      let sendButton = document.querySelector('[data-name="send_button"]');

      var latestCursor = 0;

      const insertMessageInScreen = (msg) => {
        const wrapperDiv = document.createElement('div');
        wrapperDiv.classList.add('chat_text__message__wrapper');

        const userNameDiv = document.createElement('div');
        userNameDiv.classList.add('chat_text__message__user_name');

        const messageTextDiv = document.createElement('div');
        messageTextDiv.classList.add('chat_text__message__text');

        userNameDiv.innerText = msg.user_name;
        messageTextDiv.innerText = msg.message_content;

        wrapperDiv.appendChild(userNameDiv);
        wrapperDiv.appendChild(messageTextDiv);

        chatContainer.append(wrapperDiv);
      };

      const processMessagesResponse = (messages) => {
        for (let msg of messages) {
          insertMessageInScreen(msg);

          let messageTime = new Date(msg.current_time).getTime() / 1000;
          if (messageTime > latestCursor) {
            latestCursor = messageTime;
          }
        }
      };

      const checkNewMessages = () => {
        fetch(`/poll_messages/${latestCursor}`, {
          method: 'GET',
          cache: 'no-cache',
          headers: {
            'Accept': 'application/json'
          },
        }).then((response) => {
          response.json().then((content) => {
            processMessagesResponse(content);
          });
        });
      };

      checkNewMessages();
      setInterval(() => {
        console.log("Checking for new messages...");
        checkNewMessages();
      }, 1000);

      sendButton.onclick = () => {
        let userName = userNameInput.value;
        let messageContent = messageInput.value;

        fetch("/send_message", {
          method: "POST",
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            user_name: userName,
            message_content: messageContent
          })
        }).then((response) => {
          if (response.status !== 204) {
            alert("PANIC! Message could not be sent.");
          }
        }).catch(() => {
          alert("PANIC! Request failed.");
        });

        return false;
      };

    </script>

  </body>
</html>
